{"version":3,"sources":["components/Movie.js","routes/Home.js","routes/About.js","routes/Detail.js","components/Navigation.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","className","to","pathname","state","src","alt","map","genre","index","key","slice","prototype","PropTypes","number","isRequired","string","arrayOf","Home","isLoading","movies","getMovies","a","axios","get","data","setState","this","class","movie","medium_cover_image","React","Component","About","props","console","log","Detail","location","history","undefined","push","Navigation","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"wZAKA,SAASA,EAAT,GAA0D,IAA1CC,EAAyC,EAAzCA,GAAIC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,OAAOC,EAAQ,EAARA,OAC7C,OACG,yBAAKC,UAAU,SACf,kBAAC,IAAD,CACCC,GAAI,CACFC,SAAS,UAAD,OAAYR,GACpBS,MAAO,CACLR,OACAC,QACAC,UACAC,SACAC,YAKR,yBAAKK,IAAKN,EAAQO,IAAKT,EAAOA,MAAOA,IACrC,yBAAKI,UAAU,eACb,wBAAIA,UAAU,gBAAgBJ,GAC9B,wBAAII,UAAU,eAAeL,GAC7B,wBAAIK,UAAU,iBACXD,EAAOO,KAAI,SAACC,EAAOC,GAAR,OACV,wBAAIC,IAAKD,EAAOR,UAAU,iBACvBO,OAIP,uBAAGP,UAAU,kBAAkBH,EAAQa,MAAM,EAAG,KAAhD,UAKNjB,EAAMkB,UAAW,CACbjB,GAAIkB,IAAUC,OAAOC,WACrBnB,KAAMiB,IAAUC,OAAOC,WACvBlB,MAAMgB,IAAUG,OAAOD,WACvBjB,QAAQe,IAAUG,OAAOD,WACzBhB,OAAQc,IAAUG,OAAOD,WACzBf,OAAQa,IAAUI,QAAQJ,IAAUG,QAAQD,YAIjCrB,QCSAwB,G,kNAhDbd,MAAQ,CACNe,WAAY,EACZC,OAAS,I,EAIXC,U,sBAAY,8BAAAC,EAAA,sEAC6BC,IAAMC,IAAI,4DADvC,gBACUJ,EADV,EACHK,KAAMA,KAAOL,OACpB,EAAKM,SAAS,CAACN,SAAQD,WAAY,IAFzB,2C,kEAOVQ,KAAKN,c,+BAEE,IAAD,EACwBM,KAAKvB,MAA3Be,EADF,EACEA,UAAWC,EADb,EACaA,OACnB,OACE,6BAASQ,MAAM,aAEZT,EACG,yBAAKlB,UAAU,UACb,0BAAMA,UAAW,gBAAjB,iBAGJ,yBAAKA,UAAU,UACZmB,EAAOb,KAAI,SAAAsB,GAAK,OACX,kBAAC,EAAD,CACEnB,IAAKmB,EAAMlC,GACXA,GAAIkC,EAAMlC,GACVC,KAAMiC,EAAMjC,KACZC,MAAOgC,EAAMhC,MACbC,QAAS+B,EAAM/B,QACfC,OAAQ8B,EAAMC,mBACd9B,OAAQ6B,EAAM7B,kB,GAnCf+B,IAAMC,Y,MCSVC,MAbf,SAAeC,GAEb,OADAC,QAAQC,IAAIF,GAEV,yBAAKjC,UAAU,oBACb,8IAIA,8DCOSoC,E,kLAfQ,IAAD,EACYV,KAAKO,MAA3BI,EADU,EACVA,SAAUC,EADA,EACAA,aACKC,IAAnBF,EAASlC,OACXmC,EAAQE,KAAK,O,+BAGP,IACAH,EAAaX,KAAKO,MAAlBI,SACR,OAAIA,EAASlC,MACJ,8BAAOkC,EAASlC,MAAMP,OAEtB,S,GAZQkC,IAAMC,W,MCWZU,MATf,WACE,OACE,yBAAKzC,UAAU,OACb,kBAAC,IAAD,CAAMC,GAAG,KAAT,QACA,kBAAC,IAAD,CAAMA,GAAG,UAAT,W,MCWSyC,MAXf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAW5B,IACxC,kBAAC,IAAD,CAAO0B,KAAK,SAASE,UAAWb,IAChC,kBAAC,IAAD,CAAOW,KAAK,aAAaE,UAAWT,MCR1CU,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,a","file":"static/js/main.e226a524.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({id, year, title, summary, poster,genres}){\r\n    return   (\r\n       <div className=\"movie\">\r\n       <Link\r\n        to={{\r\n          pathname: `/movie/${id}`,\r\n          state: {\r\n            year,\r\n            title,\r\n            summary,\r\n            poster,\r\n            genres\r\n          }\r\n        }}\r\n      >\r\n    \r\n    <img src={poster} alt={title} title={title} />\r\n    <div className=\"movie__data\">\r\n      <h3 className=\"movie__title\">{title}</h3>\r\n      <h5 className=\"movie__year\">{year}</h5>\r\n      <ul className=\"movie__genres\">\r\n        {genres.map((genre, index) => (\r\n          <li key={index} className=\"genres__genre\">\r\n            {genre}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <p className=\"movie__summary\">{summary.slice(0, 180)}...</p>\r\n    </div></Link>\r\n  </div>);\r\n}\r\n\r\nMovie.prototype ={\r\n    id: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    title:PropTypes.string.isRequired,\r\n    summary:PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n\r\n}\r\n\r\nexport default Movie;","import React from 'react';\r\nimport axios from \"axios\";\r\nimport Movie from \"../components/Movie\"; // 같은 폴더에 있다는걸 알려줘야함 반드시\r\n//import PropTypes from \"prop-types\";\r\n//import logo from './logo.svg';\r\nimport './Home.css';\r\n\r\nclass Home extends React.Component{\r\n  state = {\r\n    isLoading : true,\r\n    movies : []\r\n  \r\n  };\r\n  \r\n  getMovies = async () => {\r\n    const {data:{data: {movies}} } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\r\n    this.setState({movies, isLoading : false});\r\n    \r\n  }\r\n  \r\n  componentDidMount(){ // 이런식의 react component로 spa 에서 주로 사용되는 순서(열고, 로딩하고, 보여주고)를 동기/비동기를 복잡하게 사용하지 않고 실행할 수 있게함\r\n    this.getMovies();\r\n  }\r\n  render(){ \r\n    const { isLoading, movies } = this.state\r\n    return(\r\n      <section class=\"container\">\r\n        \r\n        {isLoading ? (\r\n            <div className=\"loader\">\r\n              <span className =\"loader__text\">Loading...! </span>\r\n          </div>\r\n        ) : (\r\n          <div className=\"movies\">\r\n            {movies.map(movie => (\r\n                  <Movie \r\n                    key={movie.id}\r\n                    id={movie.id} \r\n                    year={movie.year} \r\n                    title={movie.title} \r\n                    summary={movie.summary} \r\n                    poster={movie.medium_cover_image}\r\n                    genres={movie.genres}\r\n                  />\r\n            ))}\r\n          </div>\r\n        )} \r\n      \r\n      </section>\r\n      )//조건문 쓰는 방법 ?로 true:false 에 해당하는 것(함수도 쓸수있나?)\r\n    \r\n  };\r\n\r\n}\r\n    \r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport \"./About.css\";\r\n\r\nfunction About(props) {\r\n  console.log(props);\r\n  return (\r\n    <div className=\"about__container\">\r\n      <span>\r\n        “Freedom is the freedom to say that two plus two make four. If that is\r\n        granted, all else follows.”\r\n      </span>\r\n      <span>− George Orwell, 1984</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\n\nclass Detail extends React.Component {\n  componentDidMount() {\n    const { location, history } = this.props;\n    if (location.state === undefined) {\n      history.push(\"/\");\n    }\n  }\n  render() {\n    const { location } = this.props;\n    if (location.state) {\n      return <span>{location.state.title}</span>;\n    } else {\n      return null;\n    }\n  }\n}\nexport default Detail;\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Navigation.css\";\r\n\r\nfunction Navigation() {\r\n  return (\r\n    <div className=\"nav\">\r\n      <Link to=\"/\">Home</Link>\r\n      <Link to=\"/about\">About</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport Home from \"./routes/Home\";\nimport About from \"./routes/About\";\nimport Detail from \"./routes/Detail\";\nimport Navigation from \"./components/Navigation\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Navigation />\n      <Route path=\"/\" exact={true} component={Home} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/movie/:id\" component={Detail} />\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './Movie.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('potato'));\n//한번에 하나의 component만 가능하다니? 원래 3개 들어가 있었는데? 그 뒤로 뭔가 바뀜?\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n//serviceWorker.unregister();\n\n\n\n\n// 에상해보면 npm process manager가 index js파일에 리스닝을 하고 있다가 바로바로 실행시켜주는 것 같음\n// app.js나 다른 여러 jsx element or component를 가져와서 index.html에 DOM을 사용해서 넣는 것\n// app.js는 여러개가 될 수 있고, index.js에서 배송위치가 결정됨\n// 이런 부분이 어디서 실행되고 network는 어떻게 되기 때문에 이렇게 빠른건지?\n// js파일이 app안에 있다고 봐야할 것 같은데, 리액트 어플은 실행할때마다 js파일을 다시 다운받는 형식인가?\n// 그럼 native app처럼 계속 업데이트해야할 필요가 없게 되고 웹앱과 같은 장점을 가질 수 있게 됨\n// react native 까지 보면 더 잘알 수 있을 것, 일단은 전체에 익숙해지는 방식부터! 이해보다 익숙해져야함"],"sourceRoot":""}