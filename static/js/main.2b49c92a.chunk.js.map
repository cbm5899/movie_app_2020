{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","className","src","alt","map","genre","index","key","slice","prototype","PropTypes","number","isRequired","string","arrayOf","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","class","movie","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"0UAIA,SAASA,EAAT,GAAyD,EAAzCC,GAA0C,IAAtCC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,OAAOC,EAAQ,EAARA,OAC7C,OAAW,yBAAKC,UAAU,SAC1B,yBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,yBAAKI,UAAU,eACb,wBAAIA,UAAU,gBAAgBJ,GAC9B,wBAAII,UAAU,eAAeL,GAC7B,wBAAIK,UAAU,iBACXD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACV,wBAAIC,IAAKD,EAAOL,UAAU,iBACvBI,OAIP,uBAAGJ,UAAU,kBAAkBH,EAAQU,MAAM,EAAG,KAAhD,SAKNd,EAAMe,UAAW,CACbd,GAAIe,IAAUC,OAAOC,WACrBhB,KAAMc,IAAUC,OAAOC,WACvBf,MAAMa,IAAUG,OAAOD,WACvBd,QAAQY,IAAUG,OAAOD,WACzBb,OAAQW,IAAUG,OAAOD,WACzBZ,OAAQU,IAAUI,QAAQJ,IAAUG,QAAQD,YAIjClB,QCwBAqB,G,kNAhDbC,MAAQ,CACNC,WAAY,EACZC,OAAS,I,EAIXC,U,sBAAY,8BAAAC,EAAA,sEAC6BC,IAAMC,IAAI,4DADvC,gBACUJ,EADV,EACHK,KAAMA,KAAOL,OACpB,EAAKM,SAAS,CAACN,SAAQD,WAAY,IAFzB,2C,kEAOVQ,KAAKN,c,+BAEE,IAAD,EACwBM,KAAKT,MAA3BC,EADF,EACEA,UAAWC,EADb,EACaA,OACnB,OACE,6BAASQ,MAAM,aAEZT,EACG,yBAAKhB,UAAU,UACb,0BAAMA,UAAW,gBAAjB,aAGJ,yBAAKA,UAAU,UACZiB,EAAOd,KAAI,SAAAuB,GAAK,OACX,kBAAC,EAAD,CACEpB,IAAKoB,EAAMhC,GACXA,GAAIgC,EAAMhC,GACVC,KAAM+B,EAAM/B,KACZC,MAAO8B,EAAM9B,MACbC,QAAS6B,EAAM7B,QACfC,OAAQ4B,EAAMC,mBACd5B,OAAQ2B,EAAM3B,kB,GAnChB6B,IAAMC,YCDxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.2b49c92a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({id, year, title, summary, poster,genres}){\r\n    return   ( <div className=\"movie\">\r\n    <img src={poster} alt={title} title={title} />\r\n    <div className=\"movie__data\">\r\n      <h3 className=\"movie__title\">{title}</h3>\r\n      <h5 className=\"movie__year\">{year}</h5>\r\n      <ul className=\"movie__genres\">\r\n        {genres.map((genre, index) => (\r\n          <li key={index} className=\"genres__genre\">\r\n            {genre}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <p className=\"movie__summary\">{summary.slice(0, 180)}...</p>\r\n    </div>\r\n  </div>);\r\n}\r\n\r\nMovie.prototype ={\r\n    id: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    title:PropTypes.string.isRequired,\r\n    summary:PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n\r\n}\r\n\r\nexport default Movie;","import React from 'react';\nimport axios from \"axios\";\nimport Movie from \"./Movie\"; // 같은 폴더에 있다는걸 알려줘야함 반드시\n//import PropTypes from \"prop-types\";\n//import logo from './logo.svg';\nimport './App.css';\n\nclass App extends React.Component{\n  state = {\n    isLoading : true,\n    movies : []\n  \n  };\n  \n  getMovies = async () => {\n    const {data:{data: {movies}} } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n    this.setState({movies, isLoading : false});\n    \n  }\n  \n  componentDidMount(){ // 이런식의 react component로 spa 에서 주로 사용되는 순서(열고, 로딩하고, 보여주고)를 동기/비동기를 복잡하게 사용하지 않고 실행할 수 있게함\n    this.getMovies();\n  }\n  render(){ \n    const { isLoading, movies } = this.state\n    return(\n      <section class=\"container\">\n        \n        {isLoading ? (\n            <div className=\"loader\">\n              <span className =\"loader__text\">Loading </span>\n          </div>\n        ) : (\n          <div className=\"movies\">\n            {movies.map(movie => (\n                  <Movie \n                    key={movie.id}\n                    id={movie.id} \n                    year={movie.year} \n                    title={movie.title} \n                    summary={movie.summary} \n                    poster={movie.medium_cover_image}\n                    genres={movie.genres}\n                  />\n            ))}\n          </div>\n        )} \n      \n      </section>\n      )//조건문 쓰는 방법 ?로 true:false 에 해당하는 것(함수도 쓸수있나?)\n    \n  };\n\n}\n    \n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './Movie.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n//한번에 하나의 component만 가능하다니? 원래 3개 들어가 있었는데? 그 뒤로 뭔가 바뀜?\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n//serviceWorker.unregister();\n\n\n\n\n// 에상해보면 npm process manager가 index js파일에 리스닝을 하고 있다가 바로바로 실행시켜주는 것 같음\n// app.js나 다른 여러 jsx element or component를 가져와서 index.html에 DOM을 사용해서 넣는 것\n// app.js는 여러개가 될 수 있고, index.js에서 배송위치가 결정됨\n// 이런 부분이 어디서 실행되고 network는 어떻게 되기 때문에 이렇게 빠른건지?\n// js파일이 app안에 있다고 봐야할 것 같은데, 리액트 어플은 실행할때마다 js파일을 다시 다운받는 형식인가?\n// 그럼 native app처럼 계속 업데이트해야할 필요가 없게 되고 웹앱과 같은 장점을 가질 수 있게 됨\n// react native 까지 보면 더 잘알 수 있을 것, 일단은 전체에 익숙해지는 방식부터! 이해보다 익숙해져야함"],"sourceRoot":""}